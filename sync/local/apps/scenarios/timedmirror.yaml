root:
  name: "TimedMirror"
  description: "Timeout-based mirroring"
  pdf: "./demo_scenario.pdf"
  working_directory: "cwd/timedmirror"
  topology:
    switches:
      - name: s1
        dpid: 1
        enabled: True
    hosts:
      - name: n1
        ip: "11.0.0.1/8"
      - name: n2
        ip: "22.0.0.1/8"
      - name: n3
        ip: "33.0.0.1/8"
      - name: n4
        ip: "44.0.0.1/8"
    links:
      - [n1, s1, 1000]
      - [n2, s1, 1000]
      - [n3, s1, 1000]
      - [n4, s1, 1000]

  networks:
    - name: "n1"
      alias: "N1"
      send_from_src:
        - "11.0.0.0/8"
      send_to_dst:
        - "22.0.0.0/8"
        - "33.0.0.0/8"
    - name: "n2"
      alias: "N2"
      recv_to_dst:
        - "22.0.0.0/8"
    - name: "n3"
      alias: "N3"
      recv_to_dst:
        - "33.0.0.0/8"
    - name: "n4"
      alias: "N4"
      packet_ratio: 0.5
      recv_to_dst:
        - "44.0.0.0/8"
  
  # traffic generation
  traffic:
    # specify all the profiles that should be used (in parallel!)
    use_profiles:
      - default
      - mirror1
      - mirror2

  # specify traffic profiles for this scenario
  traffic_profiles:
    #  the default profile
    - name: default
      # estimated runtime of this schedule in seconds
      runtime: 1
      # grace time in seconds before performing a traffic analysis
      wait_for_analaysis: 3
      # automatically create the schedule with the parameters specified
      type: auto
      # evaluation schema: strict, progressive or disregard
      evaluation: strict
      # specify the parameters for the schedule
      params: 
        # generate x events in total
        events: 20
        # randomly select time range for a event between [a,b]
        time_range: [1,10] 
        # randomly select the amount of packets from the given array
        choice_packets: [1000]
        # randomly select a inter arrival time from the given array
        choice_iat: ["1us"]
        # randomly select a priority from the given array
        choice_priority: [1]
    - name: mirror1
      # estimated runtime of this schedule in seconds
      runtime: 1
      # grace time in seconds before performing a traffic analysis
      wait_for_analaysis: 3
      # automatically create the schedule with the parameters specified
      type: auto
      # evaluation schema: strict, progressive or disregard
      evaluation: strict
      # specify the parameters for the schedule
      params: 
        # generate x events in total
        events: 4
        # randomly select time range for a event between [a,b]
        time_range: [1,3] 
        # randomly select the amount of packets from the given array
        choice_packets: [1000]
        # randomly select a inter arrival time from the given array
        choice_iat: ["1us"]
        # randomly select a priority from the given array
        choice_priority: [1]
        # randomly choose a number of ip source addresses corresponding
        # to the selected hosts and keep them fixed during event
        # generation. Choose any of the destination addresses from the
        # range associated with hosts in dst_hosts
        ip_overrides:
          count: 5
          src_hosts: ["n1"]
          dst_hosts: ["n4"]
    - name: mirror2
      # estimated runtime of this schedule in seconds
      runtime: 1
      # grace time in seconds before performing a traffic analysis
      wait_for_analaysis: 3
      # automatically create the schedule with the parameters specified
      type: auto
      # evaluation schema: strict, progressive or disregard
      evaluation: strict
      # specify the parameters for the schedule
      params: 
        # generate x events in total
        events: 4
        # randomly select time range for a event between [a,b]
        time_range: [5,10] 
        # randomly select the amount of packets from the given array
        choice_packets: [1000]
        # randomly select a inter arrival time from the given array
        choice_iat: ["1us"]
        # randomly select a priority from the given array
        choice_priority: [1]
        # randomly choose a number of ip source addresses corresponding
        # to the selected hosts and keep them fixed during event
        # generation. Choose any of the destination addresses from the
        # range associated with hosts in dst_hosts
        ip_overrides:
          count: 5
          src_hosts: ["n1"]
          dst_hosts: ["n4"]

  # more advanced traffic generation parameters
  trafgen:

    # Specifies the (random) ips that are used in the traffic generator.
    # This is required for setting up the network oracle in 
    # the controller. The file is stored in the working directory of the
    # scenario so this can be the same for all scenarios (no need to change).
    deployment_file: "oracle/deployment.yaml"
    
    # Artifical delay for udp streams. The first packet is
    # sent immediatly and all other packets are sent after a timeout
    # that can be specified with this variable.
    udp_first_packet_delay: 0.5
